var n=Object.defineProperty;var i=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var s=(e,t,r)=>i(e,typeof t!="symbol"?t+"":t,r);class l{constructor(t,r){s(this,"client");s(this,"registry");this.client=t,this.registry=r}async resolveName(t){try{const{contract:r,getQueryMsg:c}=this.registry;return await this.client.queryContractSmart(r,c(t))}catch(r){console==null||console.error(r);return}}}export{l as NameService};
